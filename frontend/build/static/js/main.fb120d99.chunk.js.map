{"version":3,"sources":["services/api.js","App.js","index.js"],"names":["api","axios","create","baseURL","App","useState","repositories","setRepositories","title","url","techs","a","post","likes","response","repo","data","id","delete","newRepositories","filter","useEffect","get","then","data-testid","map","key","onClick","handleRemoveRepository","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAMeA,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,0B,MCwDIC,MAtDf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQC,EADR,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,aAGSH,mBAAS,KAHlB,mBAGNI,EAHM,aAIaJ,mBAAS,KAJtB,mBAINK,EAJM,iDAWb,8BAAAC,EAAA,sEACyBX,EAAIY,KAAK,gBAC9B,CACEJ,QACAC,MACAC,QACAG,MAAO,IANb,OACQC,EADR,OASQC,EAAOD,EAASE,KACtBT,EAAgB,GAAD,mBAAKD,GAAL,CAAmBS,KAVpC,4CAXa,kEAwBb,WAAsCE,GAAtC,eAAAN,EAAA,sEACQX,EAAIkB,OAAJ,wBAA4BD,IADpC,OAEQE,EAAkBb,EAAac,QAAO,SAAAL,GAAI,OAAIA,EAAKE,KAAOA,KAChEV,EAAgBY,GAHlB,4CAxBa,sBA8Bb,OA9Ba,KAMbE,qBAAU,WACRrB,EAAIsB,IAAI,iBACPC,MAAK,SAAAT,GAAQ,OAAIP,EAAgBO,EAASE,WAC1C,IAsBD,6BACE,wBAAIQ,cAAY,mBACblB,EAAamB,KAAI,SAAAV,GAAI,OAEpB,wBAAIW,IAAKX,EAAKE,IAAd,UACUF,EAAKP,MACb,6BAFF,QAGQO,EAAKN,IACX,6BAJF,UAKUM,EAAKL,MACb,6BANF,UAOUK,EAAKF,MACb,6BACA,4BAAQc,QAAS,kBA5Cd,2CA4CoBC,CAAuBb,EAAKE,MAAnD,kBAKN,4BAAQU,QAjDC,4CAiDT,iBClDNE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fb120d99.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:3333\",\n});\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\nimport api from './services/api';\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [techs, setTechs] = useState('');\n\n  useEffect(() => {  // listar repositorios existentes\n    api.get('/repositories')\n    .then(response => setRepositories(response.data));\n  }, []);\n  \n  async function handleAddRepository() {\n    const response = await api.post('/repositories', \n      {\n        title,\n        url,\n        techs,\n        likes: 0,\n      });\n\n    const repo = response.data;\n    setRepositories([...repositories, repo]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`/repositories/${id}`);\n    const newRepositories = repositories.filter(repo => repo.id !== id);\n    setRepositories(newRepositories);\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        {repositories.map(repo => (\n          \n          <li key={repo.id}>\n            title: {repo.title}\n            <br/>\n            url: {repo.url}\n            <br/>\n            techs: {repo.techs}\n            <br/>\n            likes: {repo.likes}\n            <br/>\n            <button onClick={() => handleRemoveRepository(repo.id)}> Remover </button>\n          </li>\n\n        ))}\n      </ul>\n      <button onClick={handleAddRepository}> Adicionar </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
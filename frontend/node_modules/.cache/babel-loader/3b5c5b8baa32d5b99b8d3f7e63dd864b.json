{"ast":null,"code":"var _jsxFileName = \"/home/ester/Documentos/WEB/Bootcamp/module1/ReactJs/ReactJsChallenge/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from './services/api';\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [techs, setTechs] = useState('');\n  useEffect(() => {\n    // listar repositorios existentes\n    api.get('/repositories').then(response => setRepositories(response.data));\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('/repositories', {\n      title,\n      url,\n      techs,\n      likes: 0\n    });\n    const repo = response.data;\n    setRepositories([...repositories, repo]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`/repositories/${id}`);\n    const newRepositories = repositories.filter(repo => repo.id !== id);\n    setRepositories(newRepositories);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Set Repositories\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Type a title, a url and repository techs, in this order:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, repositories.map(repo => /*#__PURE__*/React.createElement(\"li\", {\n    key: repo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"title: \", repo.title, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), \"url: \", repo.url, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), \"techs: \", repo.techs, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), \"likes: \", repo.likes, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(repo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \" Remover \")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \" Adicionar \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ester/Documentos/WEB/Bootcamp/module1/ReactJs/ReactJsChallenge/src/App.js"],"names":["React","useState","useEffect","api","App","repositories","setRepositories","title","setTitle","url","setUrl","techs","setTechs","get","then","response","data","handleAddRepository","post","likes","repo","handleRemoveRepository","id","delete","newRepositories","filter","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAG;AACjBC,IAAAA,GAAG,CAACU,GAAJ,CAAQ,eAAR,EACCC,IADD,CACMC,QAAQ,IAAIT,eAAe,CAACS,QAAQ,CAACC,IAAV,CADjC;AAED,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeC,mBAAf,GAAqC;AACnC,UAAMF,QAAQ,GAAG,MAAMZ,GAAG,CAACe,IAAJ,CAAS,eAAT,EACrB;AACEX,MAAAA,KADF;AAEEE,MAAAA,GAFF;AAGEE,MAAAA,KAHF;AAIEQ,MAAAA,KAAK,EAAE;AAJT,KADqB,CAAvB;AAQA,UAAMC,IAAI,GAAGL,QAAQ,CAACC,IAAtB;AACAV,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBe,IAAlB,CAAD,CAAf;AACD;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C;AACxC,UAAMnB,GAAG,CAACoB,MAAJ,CAAY,iBAAgBD,EAAG,EAA/B,CAAN;AACA,UAAME,eAAe,GAAGnB,YAAY,CAACoB,MAAb,CAAoBL,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAxC,CAAxB;AACAhB,IAAAA,eAAe,CAACkB,eAAD,CAAf;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAFF,eAGE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,YAAY,CAACqB,GAAb,CAAiBN,IAAI,iBAEpB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUF,IAAI,CAACb,KADf,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,WAGQa,IAAI,CAACX,GAHb,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,aAKUW,IAAI,CAACT,KALf,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,aAOUS,IAAI,CAACD,KAPf,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAME,sBAAsB,CAACD,IAAI,CAACE,EAAN,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CAFD,CADH,CAHF,eAoBE;AAAQ,IAAA,OAAO,EAAEL,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApBF,CADF;AAwBD;;AAED,eAAeb,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from './services/api';\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [techs, setTechs] = useState('');\n\n  useEffect(() => {  // listar repositorios existentes\n    api.get('/repositories')\n    .then(response => setRepositories(response.data));\n  }, []);\n  \n  async function handleAddRepository() {\n    const response = await api.post('/repositories', \n      {\n        title,\n        url,\n        techs,\n        likes: 0,\n      });\n\n    const repo = response.data;\n    setRepositories([...repositories, repo]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`/repositories/${id}`);\n    const newRepositories = repositories.filter(repo => repo.id !== id);\n    setRepositories(newRepositories);\n  }\n\n  return (\n    <div>\n      <h1>Set Repositories</h1>\n      <h3>Type a title, a url and repository techs, in this order:</h3>\n      <ul data-testid=\"repository-list\">\n        {repositories.map(repo => (\n          \n          <li key={repo.id}>\n            title: {repo.title}\n            <br/>\n            url: {repo.url}\n            <br/>\n            techs: {repo.techs}\n            <br/>\n            likes: {repo.likes}\n            <br/>\n            <button onClick={() => handleRemoveRepository(repo.id)}> Remover </button>\n          </li>\n\n        ))}\n      </ul>\n      <button onClick={handleAddRepository}> Adicionar </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}